name: Sync Upstream and Build

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  sync-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Add upstream remote
      run: |
        git remote add upstream https://github.com/open-webui/open-webui.git
        git fetch upstream

    - name: Check for upstream changes
      id: check_changes
      run: |
        # Get the latest upstream commit
        UPSTREAM_COMMIT=$(git rev-parse upstream/main)
        CURRENT_COMMIT=$(git rev-parse HEAD)

        if [ "$UPSTREAM_COMMIT" != "$CURRENT_COMMIT" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "upstream_commit=$UPSTREAM_COMMIT" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Merge upstream changes
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git merge upstream/main --no-edit
        git push origin main

    - name: Set up Docker Buildx
      if: steps.check_changes.outputs.changes == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: steps.check_changes.outputs.changes == 'true'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        # Generate timestamp and git hash based tags
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        GIT_HASH=$(git rev-parse --short HEAD)
        IMAGE_TAG="ghcr.io/forpublicai/open-webui:cognito-patch-$GIT_HASH-$TIMESTAMP"
        LATEST_TAG="ghcr.io/forpublicai/open-webui:latest-cognito-patch"

        docker build \
          --platform linux/amd64 \
          --build-arg USE_SLIM=TRUE \
          -t "$IMAGE_TAG" \
          -t "$LATEST_TAG" \
          .

        docker push "$IMAGE_TAG"
        docker push "$LATEST_TAG"

        echo "Built and pushed: $IMAGE_TAG"